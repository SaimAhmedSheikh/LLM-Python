import pdfplumber, json, glob, os
import pandas as pd

def extract_and_parse_pdf(file_path, file_name=""):
    lines = []
    try:
        with pdfplumber.open(file_path) as pdf:
            pageStarted = False
            for page in pdf.pages:
                pageData = page.extract_text_lines(layout=True, strip=True, return_chars=False)
                textLines = [line['text'] for line in pageData]
                noLines = len(textLines)
                for i in range(0,noLines):
                    line = textLines[i]
                    if "Report Explanation" in line:
                        pageStarted = True
                        continue
                    elif "Results generated by" in line:
                        pageStarted = False
                    if pageStarted == True:
                        lines.append(line)
    except Exception as e:
        print("An exception occurred: ", e)
        return lines
    else:
        print("*** Pdf processed successfully ***")

    newLines = lines.copy()

    # # Initialize a dictionary to hold the extracted data
    PATIENT_DATA_KEYS = [
    "Surname",
    "Forename",
    "Date of birth",
    "Sample Number",
    "Sex",
    "Lab No",
    "Sample Dated",
    "Sample Received",
    "Result Reported",
    "Sample Type",
    ]
        
    patientData = {}

    for line in newLines:
        if(":" in line):
            if "Surname" in line:
                patientData["surname"] = line.split(":")[1].strip()
            elif "Forename" in line:
                patientData["forename"] = line.split(":")[1].strip()
            elif "Date of birth" in line:
                patientData["date_of_birth"] = line.split(":")[1].strip()
            elif "Sample Number" in line:
                patientData["sample_number"] = line.split(":")[1].strip()
            elif "Sex" in line:
                patientData["sex"] = line.split(":")[1].strip()
            elif "Lab No" in line:
                patientData["lab_no"] = line.split(":")[1].strip()
            elif "Sample Dated" in line:
                patientData["sample_dated"] = line.split(":")[1].strip()
            elif "Sample Received" in line:
                patientData["sample_received"] = line.split(":")[1].strip()
            elif "Result Reported" in line:
                patientData["result_reported"] = line.split(":")[1].strip()
            elif "Sample Type" in line:
                patientData["sample_type"] = line.split(":")[1].strip()

    newLines = [line for line in newLines if not any(word in line for word in PATIENT_DATA_KEYS)]

    newLines2 = newLines.copy()

    length = len(newLines)
    results = []
    result = None
    for i in range(0, length):
        line = newLines[i]
        nextLine = newLines[i+1] if i+1 < length else None
        if nextLine is not None and "Result" in nextLine:
            results.append(result) if result is not None else None
            result = []
        elif nextLine is None and i == length-1:
            results.append(result) if result is not None else None
        if result is not None:
            result.append(line)
            newLines2.remove(line)

    resultData = []
    for result in results:
        resultData.append({
            "test": result[0],
            "result": result[1],
            "range": result[2],
            "explanation": " ".join(result[3:]) if len(result) > 3 else None,
        })

    summaryLines = newLines2.copy()
    summary = " ".join(summaryLines[1:])
    # print(summary)
        
    data = {
        "file_name": file_name,
        "patient_data": patientData,
        "explanations": resultData,
        "summary": summary,
    }
    # print(patientData)
    # print(results)
    return data

def write_data_to_file(data, output_file):
    with open(output_file, 'w') as file:
        file.write(json.dumps(data, indent=2))

def write_data_to_csv(data, output_file):
    df = pd.DataFrame(data)
    df.to_csv(output_file, index=False)



# Path to the directory
directory_path = 'sample_explanations'

# List all files matching the pattern
files = os.listdir(directory_path)

allData = []
# Loop through the files and read them
for filename in files:
    file_path = os.path.join(directory_path, filename)
    print(file_path)
    if os.path.isfile(file_path):  # Check if it is a file
        result = extract_and_parse_pdf(file_path, file_name=filename.split(".")[0])
        # write_data_to_file(parsed_data, file_path.split(".")[0]+".json")
        allData.append(result)

# file_path = '2402-26967_basic_ExplanationReport(5044)YRV-2402-26967 - 29-Feb-2024-14_38_46.pdf'

# Write the parsed data to a text file
output_file_path = 'summaries.json'
write_data_to_file(allData, output_file_path)


print(f"Data has been written to {output_file_path}")
